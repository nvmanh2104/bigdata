<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
  <!--
    The following properties are set for running HBase as a single process on a
    developer workstation. With this configuration, HBase is running in
    "stand-alone" mode and without a distributed file system. In this mode, and
    without further configuration, HBase and ZooKeeper data are stored on the
    local filesystem, in a path under the value configured for `hbase.tmp.dir`.
    This value is overridden from its default value of `/tmp` because many
    systems clean `/tmp` on a regular basis. Instead, it points to a path within
    this HBase installation directory.

    Running against the `LocalFileSystem`, as opposed to a distributed
    filesystem, runs the risk of data integrity issues and data loss. Normally
    HBase will refuse to run in such an environment. Setting
    `hbase.unsafe.stream.capability.enforce` to `false` overrides this behavior,
    permitting operation. This configuration is for the developer workstation
    only and __should not be used in production!__

    See also https://hbase.apache.org/book.html#standalone_dist
  -->

 <property>
    <name>hbase.master</name>
    <value>hadoop-master:60010</value>
  </property>
  <property>
    <name>hbase.rootdir</name>
    <value>hdfs://hadoop-master:9000/hbase</value>
  </property>
  <property>
    <name>hbase.zookeeper.quorum</name>
    <value>hadoop-slave1,hadoop-slave2,hadoop-slave3,hadoop-slave4,hadoop-slave5</value>
  </property>
  <property>
   	<name>hbase.master.info.port</name>
  	<value>60010</value>
  </property>

   <property>
    <name>hbase.zookeeper.property.dataDir</name>
    <!--<value>/usr/local/hbase/hbasestorage/zookeeper</value>-->
    <value>/usr/local/zookeeper</value>
  </property>
  
  <property>
    <name>hbase.cluster.distributed</name>
    <value>true</value>
  </property>
  
  <property>
    <name>hbase.tmp.dir</name>
    <value>./tmp</value>
  </property>
  
  <property>
    <name>hbase.unsafe.stream.capability.enforce</name>
    <value>false</value>
  </property>

 <property>
   <name>hbase.zookeeper.property.clientPort</name>
   <value>2181</value>
  </property>

  <property>
    <name>hbase.hregion.memstore.flush.size</name>
    <value>536870912</value>
  </property>

  <property>
  <name>hbase.regionserver.global.memstore.lowerLimit</name>
  <value>0.35</value>
  </property>

  <property>
  <name>hbase.regionserver.global.memstore.upperLimit</name>
    <value>0.4</value>
  </property>

  <property>
  <name>hbase.hregion.memstore.block.multiplier</name>
    <value>2</value>
  </property>

  <property> 
    <name>hbase.hregion.max.filesize</name> 
    <value> 1073741824 </value> 
  </property>

<property>
  <name>hbase.client.scanner.caching</name>
  <value>10000</value>
</property>


  <property>
    <name>hfile.block.cache.size</name>
    <value>0.3</value>
  </property>

<!-- <property> <name>hbase.regionserver.handler.count</name> <value>30</value> </property> -->

  <!-- <property>
    <name>hbase.region.replica.replication.enabled</name>
    <value>true</value>
  </property> -->

  <!-- <property>
    <name>hbase.regionserver.replication.handler.count</name>
    <value>15</value>
  </property> -->

  <!-- <property>
    <name>hbase.regionserver.wal.codec</name>
    <value>org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec</value>
  </property>
  
  <property>
    <name>hbase.region.server.rpc.scheduler.factory.class</name>
    <value>org.apache.hadoop.hbase.ipc.PhoenixRpcSchedulerFactory</value>
    <description>Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates</description>
  </property>

  <property>
    <name>hbase.rpc.controllerfactory.class</name>
    <value>org.apache.hadoop.hbase.ipc.controller.ServerRpcControllerFactory</value>
    <description>Factory to create the Phoenix RPC Scheduler that uses separate queues for index and metadata updates</description>
  </property>
  
  <property>
    <name>hbase.coprocessor.regionserver.classes</name>
    <value>org.apache.hadoop.hbase.regionserver.LocalIndexMerger</value>
  </property> -->

  <!-- <property>
    <name>hbase.master.loadbalancer.class</name>
    <value>org.apache.phoenix.hbase.index.balancer.IndexLoadBalancer</value>
  </property>
  
  <property>
    <name>hbase.coprocessor.master.classes</name>
    <value>org.apache.phoenix.hbase.index.master.IndexMasterObserver</value>
  </property> -->

</configuration>
<!-- hbase.region.replica.replication.enabled to true in hbase-site.xml.
CREATE 't1', 'f1', {REGION_REPLICATION => 2}
 -->